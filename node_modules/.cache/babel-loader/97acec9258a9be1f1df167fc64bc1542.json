{"ast":null,"code":"import axios from \"axios\";\nimport qs from \"qs\";\nconst instance = axios.create({\n  baseURL: 'https://api.unsplash.com'\n});\n\nclass UnsplashApi {\n  async fetchPhotos(params) {\n    const queryParams = qs.stringify(params, {\n      encode: false\n    });\n    return instance.get(`/search/photos?${queryParams}`).then(response => response.data);\n  }\n\n  async changeLikePhoto({\n    id,\n    isLiked\n  }, clientId) {\n    const url = `/photos/${id}/like?clientId=${clientId}`;\n\n    if (isLiked) {\n      return instance.post(url).then(response => response.data);\n    }\n\n    return instance.delete(url).then(response => response.data);\n  }\n\n}\n\nexport const unsplashAPI = new UnsplashApi();","map":{"version":3,"sources":["/Users/softarex-093/Documents/unsplash/src/api/unsplash.api.ts"],"names":["axios","qs","instance","create","baseURL","UnsplashApi","fetchPhotos","params","queryParams","stringify","encode","get","then","response","data","changeLikePhoto","id","isLiked","clientId","url","post","delete","unsplashAPI"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,EAAP,MAAe,IAAf;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE;AADiB,CAAb,CAAjB;;AAIA,MAAMC,WAAN,CAAkB;AAEd,QAAMC,WAAN,CAAkBC,MAAlB,EAA0E;AACtE,UAAMC,WAAW,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,EAAqB;AAACG,MAAAA,MAAM,EAAE;AAAT,KAArB,CAApB;AAEA,WAAOR,QAAQ,CACVS,GADE,CACG,kBAAiBH,WAAY,EADhC,EAEFI,IAFE,CAEGC,QAAQ,IAAIA,QAAQ,CAACC,IAFxB,CAAP;AAGH;;AAED,QAAMC,eAAN,CAAuB;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,GAAvB,EAA+DC,QAA/D,EAAiF;AAC7E,UAAMC,GAAG,GAAI,WAAUH,EAAG,kBAAiBE,QAAS,EAApD;;AAEA,QAAGD,OAAH,EAAW;AACP,aAAOf,QAAQ,CAACkB,IAAT,CAAcD,GAAd,EACFP,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH;;AAED,WAAOZ,QAAQ,CAACmB,MAAT,CAAgBF,GAAhB,EACFP,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH;;AApBa;;AAuBlB,OAAO,MAAMQ,WAAW,GAAG,IAAIjB,WAAJ,EAApB","sourcesContent":["import axios from \"axios\";\nimport {IChangePhotoLikeRequest, IFetchPhotosQuery, IGetPhotosResponse} from \"../interfaces/unsplash.interface\";\nimport qs from \"qs\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.unsplash.com',\n})\n\nclass UnsplashApi {\n\n    async fetchPhotos(params: IFetchPhotosQuery): Promise<IGetPhotosResponse> {\n        const queryParams = qs.stringify(params, {encode: false});\n\n        return instance\n            .get(`/search/photos?${queryParams}`)\n            .then(response => response.data)\n    }\n\n    async changeLikePhoto ({id, isLiked}: IChangePhotoLikeRequest, clientId: string) {\n        const url = `/photos/${id}/like?clientId=${clientId}`;\n\n        if(isLiked){\n            return instance.post(url)\n                .then(response => response.data)\n        }\n\n        return instance.delete(url)\n            .then(response => response.data)\n    }\n}\n\nexport const unsplashAPI = new UnsplashApi();"]},"metadata":{},"sourceType":"module"}