{"ast":null,"code":"import axios from \"axios\";\nimport qs from \"qs\";\nconst instance = axios.create({\n  baseURL: 'https://api.unsplash.com'\n});\n\nclass UnsplashApi {\n  async fetchPhotos(params) {\n    const queryParams = qs.stringify(params, {\n      encode: false\n    });\n    return instance.get(`/search/photos?${queryParams}`).then(response => response.data);\n  }\n\n  async changeLikePhoto({\n    id,\n    isLiked\n  }, clientId) {\n    const url = `/photos/${id}/like?client_id=${clientId}`;\n    const config = {\n      headers: {\n        'Authorization': localStorage.getItem('token')\n      }\n    };\n\n    if (isLiked) {\n      return instance.post(url, {}, config);\n    }\n\n    return instance.delete(url, config).then(response => response.data);\n  }\n\n}\n\nexport const unsplashAPI = new UnsplashApi();","map":{"version":3,"sources":["/Users/softarex-093/Documents/unsplash/src/api/unsplash.api.ts"],"names":["axios","qs","instance","create","baseURL","UnsplashApi","fetchPhotos","params","queryParams","stringify","encode","get","then","response","data","changeLikePhoto","id","isLiked","clientId","url","config","headers","localStorage","getItem","post","delete","unsplashAPI"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAOA,OAAOC,EAAP,MAAe,IAAf;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE;AADiB,CAAb,CAAjB;;AAIA,MAAMC,WAAN,CAAkB;AAEd,QAAMC,WAAN,CAAkBC,MAAlB,EAA0E;AACtE,UAAMC,WAAW,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,EAAqB;AAACG,MAAAA,MAAM,EAAE;AAAT,KAArB,CAApB;AAEA,WAAOR,QAAQ,CACVS,GADE,CACG,kBAAiBH,WAAY,EADhC,EAEFI,IAFE,CAEGC,QAAQ,IAAIA,QAAQ,CAACC,IAFxB,CAAP;AAGH;;AAED,QAAMC,eAAN,CAAuB;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,GAAvB,EAA+DC,QAA/D,EAAsG;AAClG,UAAMC,GAAG,GAAI,WAAUH,EAAG,mBAAkBE,QAAS,EAArD;AACA,UAAME,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADZ;AADE,KAAf;;AAMA,QAAGN,OAAH,EAAY;AACR,aAAOf,QAAQ,CAACsB,IAAT,CAAcL,GAAd,EAAmB,EAAnB,EAAuBC,MAAvB,CAAP;AACH;;AAED,WAAOlB,QAAQ,CAACuB,MAAT,CAAgBN,GAAhB,EAAqBC,MAArB,EACFR,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH;;AAxBa;;AA2BlB,OAAO,MAAMY,WAAW,GAAG,IAAIrB,WAAJ,EAApB","sourcesContent":["import axios from \"axios\";\nimport {\n    IChangePhotoLikeRequest,\n    IFetchPhotosQuery,\n    IGetPhotosResponse,\n    IPhotoInfo\n} from \"../interfaces/unsplash.interface\";\nimport qs from \"qs\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.unsplash.com',\n})\n\nclass UnsplashApi {\n\n    async fetchPhotos(params: IFetchPhotosQuery): Promise<IGetPhotosResponse> {\n        const queryParams = qs.stringify(params, {encode: false});\n\n        return instance\n            .get(`/search/photos?${queryParams}`)\n            .then(response => response.data)\n    }\n\n    async changeLikePhoto ({id, isLiked}: IChangePhotoLikeRequest, clientId: string): Promise<IPhotoInfo> {\n        const url = `/photos/${id}/like?client_id=${clientId}`;\n        const config = {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n            }\n        }\n\n        if(isLiked) {\n            return instance.post(url, {}, config)\n        }\n\n        return instance.delete(url, config)\n            .then(response => response.data)\n    }\n}\n\nexport const unsplashAPI = new UnsplashApi();"]},"metadata":{},"sourceType":"module"}