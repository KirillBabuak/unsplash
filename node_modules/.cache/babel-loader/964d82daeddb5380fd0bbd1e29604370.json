{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/softarex-093/Documents/unsplash/src/pages/Photos/List.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Gallery, Item } from \"react-photoswipe-gallery\";\nimport 'photoswipe/dist/photoswipe.css';\nimport 'photoswipe/dist/default-skin/default-skin.css';\nimport { useTypedSelector } from \"../../types/redux.types\";\n\nconst List = () => {\n  _s();\n\n  const list = useTypedSelector(state => state.photos.list);\n  const allCountPhotos = useTypedSelector(state => state.photos.allCount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GalleryGrid\",\n    children: /*#__PURE__*/_jsxDEV(Gallery, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-gallery\",\n        children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          dataLength: list.length,\n          next: () => {},\n          hasMore: allCountPhotos > list.length,\n          loader: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this),\n          children: list.map(({\n            urls,\n            user,\n            id,\n            width,\n            height,\n            description,\n            liked_by_user\n          }) => /*#__PURE__*/_jsxDEV(Item, {\n            original: urls.full,\n            thumbnail: urls.small,\n            width: width,\n            height: height,\n            children: ({\n              ref,\n              open\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"destination\",\n              ref: ref,\n              onClick: open,\n              style: {\n                backgroundImage: `url(${urls.small})`\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overlay\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: user.profile_image.small,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"actions\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `like ${liked_by_user ? 'active' : ''}`,\n                    onClick: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this) // <img\n            //     style={{cursor: 'pointer'}}\n            //     src={urls.small} alt={description}\n            //     ref={ref as React.MutableRefObject<HTMLImageElement>}\n            //     onClick={open}\n            // />\n            // <div className=\"destination\" ref={ref as React.MutableRefObject<HTMLImageElement>} onClick={open}>\n            //     <div className=\"overlay\">\n            //         <div className=\"user\">\n            //             <img src={urls.small} alt={description}/>\n            //         </div>\n            //     </div>\n            // </div>\n\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(List, \"9pIVIhQUMOsq9xKeb4/VdXHu0r4=\", false, function () {\n  return [useTypedSelector, useTypedSelector];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/softarex-093/Documents/unsplash/src/pages/Photos/List.tsx"],"names":["React","InfiniteScroll","Gallery","Item","useTypedSelector","List","list","state","photos","allCountPhotos","allCount","length","map","urls","user","id","width","height","description","liked_by_user","full","small","ref","open","backgroundImage","profile_image"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAAQC,OAAR,EAAiBC,IAAjB,QAA4B,0BAA5B;AACA,OAAO,gCAAP;AACA,OAAO,+CAAP;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;;AAEA,MAAMC,IAAI,GAAG,MAAmB;AAAA;;AAC5B,QAAMC,IAAI,GAAGF,gBAAgB,CAAEG,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,IAAzB,CAA7B;AACA,QAAMG,cAAc,GAAGL,gBAAgB,CAAEG,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaE,QAAzB,CAAvC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI,QAAC,OAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI,QAAC,cAAD;AACI,UAAA,UAAU,EAAEJ,IAAI,CAACK,MADrB;AAEI,UAAA,IAAI,EAAE,MAAM,CACX,CAHL;AAII,UAAA,OAAO,EAAEF,cAAc,GAAGH,IAAI,CAACK,MAJnC;AAKI,UAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA,kBALZ;AAAA,oBAOKL,IAAI,CAACM,GAAL,CAAS,CAAC;AAACC,YAAAA,IAAD;AAAOC,YAAAA,IAAP;AAAaC,YAAAA,EAAb;AAAiBC,YAAAA,KAAjB;AAAwBC,YAAAA,MAAxB;AAAgCC,YAAAA,WAAhC;AAA6CC,YAAAA;AAA7C,WAAD,kBACN,QAAC,IAAD;AAEI,YAAA,QAAQ,EAAEN,IAAI,CAACO,IAFnB;AAGI,YAAA,SAAS,EAAEP,IAAI,CAACQ,KAHpB;AAII,YAAA,KAAK,EAAEL,KAJX;AAKI,YAAA,MAAM,EAAEC,MALZ;AAAA,sBAOK,CAAC;AAACK,cAAAA,GAAD;AAAMC,cAAAA;AAAN,aAAD,kBACG;AAAK,cAAA,SAAS,EAAC,aAAf;AAA6B,cAAA,GAAG,EAAED,GAAlC;AAAmF,cAAA,OAAO,EAAEC,IAA5F;AAAkG,cAAA,KAAK,EAAE;AAACC,gBAAAA,eAAe,EAAG,OAAMX,IAAI,CAACQ,KAAM;AAApC,eAAzG;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,MAAf;AAAA,yCACI;AAAK,oBAAA,GAAG,EAAEP,IAAI,CAACW,aAAL,CAAmBJ,KAA7B;AAAoC,oBAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAK,kBAAA,SAAS,EAAC,SAAf;AAAA,yCACI;AACI,oBAAA,SAAS,EAAG,QAAOF,aAAa,GAAG,QAAH,GAAa,EAAG,EADpD;AAEI,oBAAA,OAAO,EAAE,MAAI,CAAE;AAFnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADH,CAeG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlCR,aACSJ,EADT;AAAA;AAAA;AAAA;AAAA,kBADH;AAPL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuDH,CA3DD;;GAAMV,I;UACWD,gB,EACUA,gB;;;KAFrBC,I;AA6DN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {Gallery, Item} from \"react-photoswipe-gallery\";\nimport 'photoswipe/dist/photoswipe.css'\nimport 'photoswipe/dist/default-skin/default-skin.css'\nimport {useTypedSelector} from \"../../types/redux.types\";\n\nconst List = (): JSX.Element => {\n    const list = useTypedSelector((state) => state.photos.list);\n    const allCountPhotos = useTypedSelector((state) => state.photos.allCount);\n\n    return (\n        <div className='GalleryGrid'>\n            <Gallery>\n                <div className=\"grid-gallery\">\n                    <InfiniteScroll\n                        dataLength={list.length}\n                        next={() => {\n                        }}\n                        hasMore={allCountPhotos > list.length}\n                        loader={<div/>}\n                    >\n                        {list.map(({urls, user, id, width, height, description, liked_by_user}) =>\n                            <Item\n                                key={id}\n                                original={urls.full}\n                                thumbnail={urls.small}\n                                width={width}\n                                height={height}\n                            >\n                                {({ref, open}) => (\n                                    <div className=\"destination\" ref={ref as React.MutableRefObject<HTMLImageElement>} onClick={open} style={{backgroundImage: `url(${urls.small})`}}>\n                                        <div className=\"overlay\">\n                                            <div className=\"user\">\n                                                <img src={user.profile_image.small} alt=\"\"/>\n                                            </div>\n                                            <div className=\"actions\">\n                                                <div\n                                                    className={`like ${liked_by_user ? 'active': ''}`}\n                                                    onClick={()=>{}}\n                                                >\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    // <img\n                                    //     style={{cursor: 'pointer'}}\n                                    //     src={urls.small} alt={description}\n                                    //     ref={ref as React.MutableRefObject<HTMLImageElement>}\n                                    //     onClick={open}\n                                    // />\n                                    // <div className=\"destination\" ref={ref as React.MutableRefObject<HTMLImageElement>} onClick={open}>\n                                    //     <div className=\"overlay\">\n                                    //         <div className=\"user\">\n                                    //             <img src={urls.small} alt={description}/>\n                                    //         </div>\n                                    //     </div>\n                                    // </div>\n                                )}\n                            </Item>\n                        )}\n                    </InfiniteScroll>\n                </div>\n            </Gallery>\n        </div>\n    )\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}