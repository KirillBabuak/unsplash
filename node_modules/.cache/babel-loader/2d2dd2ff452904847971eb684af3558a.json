{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { cleanStorage, getTokens, setTokens } from \"../helpers/localstorage.helper\";\nimport { authUnsplashAPI } from \"../api/auth.api\";\nconst initialState = {\n  access_token: '',\n  refresh_token: '',\n  loading: false,\n  error: null\n};\nexport const auth = createAsyncThunk('unsplash/auth', async (authCode, {\n  rejectWithValue\n}) => {\n  try {\n    return await authUnsplashAPI.auth(authCode);\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst mainSlice = createSlice({\n  name: 'main',\n  initialState,\n  reducers: {\n    initialize(state) {\n      const [access_token, refresh_token] = getTokens();\n      state.access_token = access_token;\n      state.refresh_token = refresh_token;\n    },\n\n    logOut(state) {\n      console.log('initialState', initialState);\n      state = { ...initialState\n      };\n      cleanStorage();\n      return state;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(auth.fulfilled, (state, action) => {\n      const {\n        access_token,\n        refresh_token\n      } = action.payload;\n      state.access_token = access_token;\n      state.refresh_token = refresh_token;\n      state.loading = false;\n      setTokens(access_token, refresh_token);\n    });\n    builder.addCase(auth.rejected, (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    });\n    builder.addCase(auth.pending, (state, action) => {\n      state.loading = true;\n      state.error = null;\n    });\n  }\n});\nexport const mainReducer = mainSlice.reducer;\nexport const {\n  initialize,\n  logOut\n} = mainSlice.actions;","map":{"version":3,"sources":["/Users/softarex-093/Documents/unsplash/src/reducers/main.reducer.ts"],"names":["createAsyncThunk","createSlice","cleanStorage","getTokens","setTokens","authUnsplashAPI","initialState","access_token","refresh_token","loading","error","auth","authCode","rejectWithValue","message","mainSlice","name","reducers","initialize","state","logOut","console","log","extraReducers","builder","addCase","fulfilled","action","payload","rejected","pending","mainReducer","reducer","actions"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AAEA,SAAQC,YAAR,EAAsBC,SAAtB,EAAiCC,SAAjC,QAAiD,gCAAjD;AACA,SAAQC,eAAR,QAA8B,iBAA9B;AASA,MAAMC,YAA0B,GAAG;AAC/BC,EAAAA,YAAY,EAAE,EADiB;AAE/BC,EAAAA,aAAa,EAAE,EAFgB;AAG/BC,EAAAA,OAAO,EAAE,KAHsB;AAI/BC,EAAAA,KAAK,EAAE;AAJwB,CAAnC;AAOA,OAAO,MAAMC,IAAI,GAAGX,gBAAgB,CAChC,eADgC,EAEhC,OAAOY,QAAP,EAAyB;AAACC,EAAAA;AAAD,CAAzB,KAA+E;AAC3E,MAAI;AACA,WAAO,MAAMR,eAAe,CAACM,IAAhB,CAAqBC,QAArB,CAAb;AACH,GAFD,CAEE,OAAOF,KAAP,EAAc;AACZ,WAAOG,eAAe,CAACH,KAAK,CAACI,OAAP,CAAtB;AACH;AACJ,CAR+B,CAA7B;AAWP,MAAMC,SAAS,GAAGd,WAAW,CAAC;AAC1Be,EAAAA,IAAI,EAAE,MADoB;AAE1BV,EAAAA,YAF0B;AAG1BW,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,CAACC,KAAD,EAAsB;AAC5B,YAAM,CAACZ,YAAD,EAAeC,aAAf,IAA+BL,SAAS,EAA9C;AAEAgB,MAAAA,KAAK,CAACZ,YAAN,GAAqBA,YAArB;AACAY,MAAAA,KAAK,CAACX,aAAN,GAAsBA,aAAtB;AACH,KANK;;AAONY,IAAAA,MAAM,CAACD,KAAD,EAAsB;AACxBE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BhB,YAA5B;AACAa,MAAAA,KAAK,GAAG,EAAC,GAAGb;AAAJ,OAAR;AACAJ,MAAAA,YAAY;AACZ,aAAOiB,KAAP;AACH;;AAZK,GAHgB;AAiB1BI,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACtBA,IAAAA,OAAO,CAACC,OAAR,CAAgBd,IAAI,CAACe,SAArB,EAAgC,CAACP,KAAD,EAAQQ,MAAR,KAAmB;AAC/C,YAAM;AAACpB,QAAAA,YAAD;AAAeC,QAAAA;AAAf,UAAgCmB,MAAM,CAACC,OAA7C;AAEAT,MAAAA,KAAK,CAACZ,YAAN,GAAqBA,YAArB;AACAY,MAAAA,KAAK,CAACX,aAAN,GAAsBA,aAAtB;AACAW,MAAAA,KAAK,CAACV,OAAN,GAAgB,KAAhB;AAEAL,MAAAA,SAAS,CAACG,YAAD,EAAeC,aAAf,CAAT;AACH,KARD;AASAgB,IAAAA,OAAO,CAACC,OAAR,CAAgBd,IAAI,CAACkB,QAArB,EAA+B,CAACV,KAAD,EAAQQ,MAAR,KAAmB;AAC9CR,MAAAA,KAAK,CAACT,KAAN,GAAciB,MAAM,CAACC,OAArB;AACAT,MAAAA,KAAK,CAACV,OAAN,GAAgB,KAAhB;AACH,KAHD;AAIAe,IAAAA,OAAO,CAACC,OAAR,CAAgBd,IAAI,CAACmB,OAArB,EAA8B,CAACX,KAAD,EAAQQ,MAAR,KAAmB;AAC7CR,MAAAA,KAAK,CAACV,OAAN,GAAgB,IAAhB;AACAU,MAAAA,KAAK,CAACT,KAAN,GAAc,IAAd;AACH,KAHD;AAIH;AAnCyB,CAAD,CAA7B;AAsCA,OAAO,MAAMqB,WAAW,GAAGhB,SAAS,CAACiB,OAA9B;AACP,OAAO,MAAM;AAACd,EAAAA,UAAD;AAAaE,EAAAA;AAAb,IAAuBL,SAAS,CAACkB,OAAvC","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\nimport {IAuthResponse} from \"../interfaces/unsplash.interface\";\nimport {cleanStorage, getTokens, setTokens} from \"../helpers/localstorage.helper\";\nimport {authUnsplashAPI} from \"../api/auth.api\";\n\nexport type InitialState = {\n    access_token: string,\n    refresh_token: string,\n    loading: boolean,\n    error: string | null\n}\n\nconst initialState: InitialState = {\n    access_token: '',\n    refresh_token: '',\n    loading: false,\n    error: null,\n};\n\nexport const auth = createAsyncThunk(\n    'unsplash/auth',\n    async (authCode: string, {rejectWithValue}): Promise<IAuthResponse | Error> => {\n        try {\n            return await authUnsplashAPI.auth(authCode)\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nconst mainSlice = createSlice({\n    name: 'main',\n    initialState,\n    reducers: {\n        initialize(state: InitialState) {\n            const [access_token, refresh_token]= getTokens();\n\n            state.access_token = access_token;\n            state.refresh_token = refresh_token;\n        },\n        logOut(state: InitialState) {\n            console.log('initialState', initialState)\n            state = {...initialState};\n            cleanStorage()\n            return state\n        },\n    },\n    extraReducers: builder => {\n        builder.addCase(auth.fulfilled, (state, action) => {\n            const {access_token, refresh_token} = action.payload as IAuthResponse\n\n            state.access_token = access_token;\n            state.refresh_token = refresh_token;\n            state.loading = false;\n\n            setTokens(access_token, refresh_token)\n        })\n        builder.addCase(auth.rejected, (state, action) => {\n            state.error = action.payload as string;\n            state.loading = false;\n        })\n        builder.addCase(auth.pending, (state, action) => {\n            state.loading = true;\n            state.error = null;\n        })\n    }\n});\n\nexport const mainReducer = mainSlice.reducer;\nexport const {initialize, logOut} = mainSlice.actions;\n"]},"metadata":{},"sourceType":"module"}