{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/softarex-093/Documents/unsplash/src/pages/Photos/Search.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Input, AutoComplete } from 'antd';\nimport { useDispatch } from \"react-redux\";\nimport { setSearch } from '../../reducers/photos.reducer';\nimport { getSearchResults, updateSearchResults } from \"../../helpers/photos.helper\";\n\nconst Search = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [options, setOptions] = useState([]);\n\n  const onSearch = (value, e) => {\n    e === null || e === void 0 ? void 0 : e.stopPropagation(); // it's need for prevent open search results\n\n    setOptions([]);\n    dispatch(setSearch(value));\n    updateSearchResults(value);\n  };\n\n  const setInputOptions = () => {\n    if (options === null || options === void 0 ? void 0 : options.length) {\n      return;\n    }\n\n    const searchResults = getSearchResults();\n    const optionsValues = searchResults.map((value, index) => ({\n      key: index,\n      value,\n      label: value\n    }));\n    setOptions(optionsValues);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AutoComplete, {\n    dropdownMatchSelectWidth: 252,\n    style: {\n      width: 300\n    },\n    options: options,\n    onFocus: setInputOptions,\n    onChange: setInputOptions,\n    onBlur: () => setOptions([]),\n    open: true,\n    children: /*#__PURE__*/_jsxDEV(Input.Search, {\n      size: \"large\",\n      placeholder: \"Search Photos\",\n      enterButton: true,\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Search, \"0gLYdXmQJbNffKzLiMQWZal9oEQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/softarex-093/Documents/unsplash/src/pages/Photos/Search.tsx"],"names":["React","useState","Input","AutoComplete","useDispatch","setSearch","getSearchResults","updateSearchResults","Search","dispatch","options","setOptions","onSearch","value","e","stopPropagation","setInputOptions","length","searchResults","optionsValues","map","index","key","label","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,KAAR,EAAeC,YAAf,QAA+C,MAA/C;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,QAAwB,+BAAxB;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,QAAoD,6BAApD;;AAEA,MAAMC,MAAM,GAAG,MAAmB;AAAA;;AAC9B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAiC,EAAjC,CAAtC;;AAEA,QAAMW,QAAQ,GAAG,CAACC,KAAD,EAAgBC,CAAhB,KAAqJ;AAClKA,IAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEC,eAAH,GADkK,CAC7I;;AACrBJ,IAAAA,UAAU,CAAC,EAAD,CAAV;AAEAF,IAAAA,QAAQ,CAACJ,SAAS,CAACQ,KAAD,CAAV,CAAR;AAEAN,IAAAA,mBAAmB,CAACM,KAAD,CAAnB;AACH,GAPD;;AASA,QAAMG,eAAe,GAAG,MAAY;AAChC,QAAIN,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEO,MAAb,EAAqB;AACjB;AACH;;AAED,UAAMC,aAAa,GAAGZ,gBAAgB,EAAtC;AACA,UAAMa,aAAa,GAAGD,aAAa,CAACE,GAAd,CAAkB,CAACP,KAAD,EAAQQ,KAAR,MAAmB;AAACC,MAAAA,GAAG,EAAED,KAAN;AAAaR,MAAAA,KAAb;AAAoBU,MAAAA,KAAK,EAAEV;AAA3B,KAAnB,CAAlB,CAAtB;AAEAF,IAAAA,UAAU,CAACQ,aAAD,CAAV;AACH,GATD;;AAWA,sBAAO,QAAC,YAAD;AACH,IAAA,wBAAwB,EAAE,GADvB;AAEH,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAE;AAAR,KAFJ;AAGH,IAAA,OAAO,EAAEd,OAHN;AAIH,IAAA,OAAO,EAAEM,eAJN;AAKH,IAAA,QAAQ,EAAEA,eALP;AAMH,IAAA,MAAM,EAAE,MAAML,UAAU,CAAC,EAAD,CANrB;AAOH,IAAA,IAAI,EAAE,IAPH;AAAA,2BASH,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,WAAW,EAAC,eAAvC;AAAuD,MAAA,WAAW,MAAlE;AAAmE,MAAA,QAAQ,EAAEC;AAA7E;AAAA;AAAA;AAAA;AAAA;AATG;AAAA;AAAA;AAAA;AAAA,UAAP;AAWH,CAnCD;;GAAMJ,M;UACeJ,W;;;KADfI,M;AAqCN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport {Input, AutoComplete, SelectProps} from 'antd';\nimport {useDispatch} from \"react-redux\";\nimport {setSearch} from '../../reducers/photos.reducer';\nimport {getSearchResults, updateSearchResults} from \"../../helpers/photos.helper\";\n\nconst Search = (): JSX.Element => {\n    const dispatch = useDispatch();\n    const [options, setOptions] = useState<SelectProps<object>['options']>([]);\n\n    const onSearch = (value: string, e: React.ChangeEvent<HTMLInputElement> | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLInputElement> | undefined): void => {\n        e?.stopPropagation() // it's need for prevent open search results\n        setOptions([])\n\n        dispatch(setSearch(value))\n\n        updateSearchResults(value);\n    };\n\n    const setInputOptions = (): void => {\n        if (options?.length) {\n            return;\n        }\n\n        const searchResults = getSearchResults();\n        const optionsValues = searchResults.map((value, index) => ({key: index, value, label: value}))\n\n        setOptions(optionsValues)\n    }\n\n    return <AutoComplete\n        dropdownMatchSelectWidth={252}\n        style={{width: 300}}\n        options={options}\n        onFocus={setInputOptions}\n        onChange={setInputOptions}\n        onBlur={() => setOptions([])}\n        open={true}\n    >\n        <Input.Search size=\"large\" placeholder=\"Search Photos\" enterButton onSearch={onSearch}/>\n    </AutoComplete>\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}