{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/softarex-093/Documents/unsplash/src/pages/Auth/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch } from \"react-redux\";\nimport { baseURL } from \"../../constants/global.constants\";\nimport { auth } from \"../../reducers/main.reducer\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport routes from \"../../constants/route.constants\";\nimport { useTypedSelector } from \"../../types/redux.types\";\n\nconst Auth = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n  const code = query.get('code');\n  const client_id = process.env.REACT_APP_UNSPLASH_ACCESS_KEY;\n  const redirect_uri = process.env.REACT_APP_UNSPLASH_REDIRECT_URL;\n  const logInUrl = `${baseURL}/oauth/authorize?client_id=${client_id}&redirect_uri=${redirect_uri}&response_type=code&cope=public+read_photos+write_likes`;\n  const access_token = useTypedSelector(state => state.main.access_token);\n  useEffect(() => {\n    if (access_token) {\n      history.push(routes.basePath);\n    }\n  }, [access_token, dispatch, history]);\n  useEffect(() => {\n    if (!access_token && code) {\n      dispatch(auth(code));\n      history.push(routes.basePath);\n    }\n  }, [code, dispatch, access_token, history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !access_token && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'auth-container',\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: logInUrl,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: baseURL,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          danger: true,\n          children: \"Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Auth, \"kqhvPQeMBYSz0H0SeoXbJ06TTzc=\", false, function () {\n  return [useDispatch, useHistory, useLocation, useTypedSelector];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/softarex-093/Documents/unsplash/src/pages/Auth/index.tsx"],"names":["React","useEffect","Button","useDispatch","baseURL","auth","useHistory","useLocation","routes","useTypedSelector","Auth","dispatch","history","location","query","URLSearchParams","search","code","get","client_id","process","env","REACT_APP_UNSPLASH_ACCESS_KEY","redirect_uri","REACT_APP_UNSPLASH_REDIRECT_URL","logInUrl","access_token","state","main","push","basePath"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,OAAR,QAAsB,kCAAtB;AACA,SAAQC,IAAR,QAAmB,6BAAnB;AACA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,kBAAtC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;;AAEA,MAAMC,IAAI,GAAG,MAAmB;AAAA;;AAC5B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,KAAK,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAAd;AACA,QAAMC,IAAI,GAAGH,KAAK,CAACI,GAAN,CAAU,MAAV,CAAb;AACA,QAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,6BAA9B;AACA,QAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,+BAAjC;AACA,QAAMC,QAAQ,GAAI,GAAErB,OAAQ,8BAA6Be,SAAU,iBAAgBI,YAAa,yDAAhG;AACA,QAAMG,YAAY,GAAGjB,gBAAgB,CAAEkB,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,YAAvB,CAArC;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyB,YAAJ,EAAkB;AACdd,MAAAA,OAAO,CAACiB,IAAR,CAAarB,MAAM,CAACsB,QAApB;AACH;AACJ,GAJQ,EAIN,CAACJ,YAAD,EAAef,QAAf,EAAyBC,OAAzB,CAJM,CAAT;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACyB,YAAD,IAAiBT,IAArB,EAA2B;AACvBN,MAAAA,QAAQ,CAACN,IAAI,CAACY,IAAD,CAAL,CAAR;AACAL,MAAAA,OAAO,CAACiB,IAAR,CAAarB,MAAM,CAACsB,QAApB;AACH;AACJ,GALQ,EAKN,CAACb,IAAD,EAAON,QAAP,EAAiBe,YAAjB,EAA+Bd,OAA/B,CALM,CAAT;AAOA,sBAAO;AAAA,cACF,CAACc,YAAD,iBAAiB;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAA,8BACd;AAAG,QAAA,IAAI,EAAED,QAAT;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADc,eAMd;AAAG,QAAA,IAAI,EAAErB,OAAT;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,MAAM,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANc;AAAA;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,UAAP;AAcH,CAtCD;;GAAMM,I;UACeP,W,EACDG,U,EACCC,W,EAMIE,gB;;;KATnBC,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {Button} from 'antd';\nimport {useDispatch} from \"react-redux\";\nimport {baseURL} from \"../../constants/global.constants\";\nimport {auth} from \"../../reducers/main.reducer\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport routes from \"../../constants/route.constants\";\nimport {useTypedSelector} from \"../../types/redux.types\";\n\nconst Auth = (): JSX.Element => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const query = new URLSearchParams(location.search);\n    const code = query.get('code');\n    const client_id = process.env.REACT_APP_UNSPLASH_ACCESS_KEY;\n    const redirect_uri = process.env.REACT_APP_UNSPLASH_REDIRECT_URL\n    const logInUrl = `${baseURL}/oauth/authorize?client_id=${client_id}&redirect_uri=${redirect_uri}&response_type=code&cope=public+read_photos+write_likes`\n    const access_token = useTypedSelector((state) => state.main.access_token);\n\n    useEffect(() => {\n        if (access_token) {\n            history.push(routes.basePath);\n        }\n    }, [access_token, dispatch, history])\n\n    useEffect(() => {\n        if (!access_token && code) {\n            dispatch(auth(code))\n            history.push(routes.basePath);\n        }\n    }, [code, dispatch, access_token, history])\n\n    return <div>\n        {!access_token && <div className={'auth-container'}>\n            <a href={logInUrl}>\n                <Button type=\"primary\">\n                    Log In\n                </Button>\n            </a>\n            <a href={baseURL}>\n                <Button type=\"primary\" danger>\n                    Registration\n                </Button>\n            </a>\n        </div>}\n    </div>;\n}\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}