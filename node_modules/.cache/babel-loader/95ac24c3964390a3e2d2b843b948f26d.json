{"ast":null,"code":"import { getItem, updateLSValue } from \"./localstorage.helper\";\nimport LS from \"../constants/localstorage.constants\";\nimport { MAX_COUNT_SEARCH_RESULTS } from \"../constants/photos.constants\";\nexport const getSearchResults = () => {\n  const searchResults = getItem(LS.searchResults);\n  return searchResults || [];\n};\nexport const updateSearchResults = newText => {\n  const searchResults = getSearchResults();\n\n  if (!newText || searchResults.includes(newText)) {\n    return;\n  }\n\n  if (searchResults.length < MAX_COUNT_SEARCH_RESULTS) {\n    searchResults.unshift(newText);\n    updateLSValue(LS.searchResults, JSON.stringify(searchResults));\n    return;\n  }\n\n  searchResults.pop();\n  searchResults.unshift(newText);\n  updateLSValue(LS.searchResults, JSON.stringify(searchResults));\n};","map":{"version":3,"sources":["/Users/softarex-093/Documents/unsplash/src/helpers/photos.helper.ts"],"names":["getItem","updateLSValue","LS","MAX_COUNT_SEARCH_RESULTS","getSearchResults","searchResults","updateSearchResults","newText","includes","length","unshift","JSON","stringify","pop"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,aAAjB,QAAqC,uBAArC;AACA,OAAOC,EAAP,MAAe,qCAAf;AACA,SAAQC,wBAAR,QAAuC,+BAAvC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAgB;AAC5C,QAAMC,aAAa,GAAGL,OAAO,CAACE,EAAE,CAACG,aAAJ,CAA7B;AAEA,SAAQA,aAAa,IAAI,EAAzB;AACH,CAJM;AAMP,OAAO,MAAMC,mBAAmB,GAAIC,OAAD,IAA2B;AAC1D,QAAMF,aAAa,GAAGD,gBAAgB,EAAtC;;AAEA,MAAG,CAACG,OAAD,IAAYF,aAAa,CAACG,QAAd,CAAuBD,OAAvB,CAAf,EAA+C;AAC3C;AACH;;AAED,MAAGF,aAAa,CAACI,MAAd,GAAuBN,wBAA1B,EAAmD;AAC/CE,IAAAA,aAAa,CAACK,OAAd,CAAsBH,OAAtB;AACAN,IAAAA,aAAa,CAACC,EAAE,CAACG,aAAJ,EAAmBM,IAAI,CAACC,SAAL,CAAeP,aAAf,CAAnB,CAAb;AACA;AACH;;AAEDA,EAAAA,aAAa,CAACQ,GAAd;AACAR,EAAAA,aAAa,CAACK,OAAd,CAAsBH,OAAtB;AACAN,EAAAA,aAAa,CAACC,EAAE,CAACG,aAAJ,EAAmBM,IAAI,CAACC,SAAL,CAAeP,aAAf,CAAnB,CAAb;AACH,CAhBM","sourcesContent":["import {getItem, updateLSValue} from \"./localstorage.helper\";\nimport LS from \"../constants/localstorage.constants\";\nimport {MAX_COUNT_SEARCH_RESULTS} from \"../constants/photos.constants\";\n\nexport const getSearchResults = (): string[] => {\n    const searchResults = getItem(LS.searchResults);\n\n    return (searchResults || []) as string[];\n};\n\nexport const updateSearchResults = (newText: string): void => {\n    const searchResults = getSearchResults();\n\n    if(!newText || searchResults.includes(newText)){\n        return;\n    }\n\n    if(searchResults.length < MAX_COUNT_SEARCH_RESULTS){\n        searchResults.unshift(newText);\n        updateLSValue(LS.searchResults, JSON.stringify(searchResults))\n        return;\n    }\n\n    searchResults.pop();\n    searchResults.unshift(newText);\n    updateLSValue(LS.searchResults, JSON.stringify(searchResults))\n};\n"]},"metadata":{},"sourceType":"module"}